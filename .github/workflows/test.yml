name: test

on: [push, pull_request]

jobs:

  ubuntu:

    runs-on: Ubuntu-20.04

    strategy:
      matrix:
        python-version: [3.7, 3.8, 3.9, pypy-3.7]

    steps:

    - name: Checkout pygraphviz
      uses: actions/checkout@v2

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Update apt-get
      run: sudo apt-get update

    - name: Install graphviz
      run: sudo apt-get install graphviz graphviz-dev

    - name: Create venv
      run: |
        python3 -m venv ~/venv
        source ~/venv/bin/activate

    - name: Install packages
      run: |
        pip install --upgrade pip wheel setuptools
        pip install -r requirements/doc.txt
        pip install -r requirements/test.txt
        pip install .
        pip list

    - name: Test pygraphviz
      run: pytest --pyargs pygraphviz


  fedora:

    strategy:
      matrix:
        release:
          - 32
          - 33

    runs-on: Ubuntu-20.04
    container: 'fedora:${{ matrix.release }}'

    steps:

    - name: Checkout pygraphviz
      uses: actions/checkout@v2

    - name: Install graphviz
      run: sudo dnf install -y graphviz graphviz-devel

    - name: Install Python developer tools
      run: sudo dnf install -y python3-devel

    - name: Install gcc
      run: sudo dnf install -y gcc

    - name: Create venv
      run: |
        python3 -m venv ~/venv

    - name: Install packages
      run: |
        source ~/venv/bin/activate
        pip install --upgrade pip wheel setuptools
        pip install -r requirements/doc.txt
        pip install -r requirements/test.txt
        pip install .
        pip list

    - name: Test pygraphviz
      run: |
        source ~/venv/bin/activate
        pytest --pyargs pygraphviz


  macos:

    runs-on: macOS-latest

    strategy:
      matrix:
        python-version: [3.7, 3.8, 3.9]

    steps:

    - name: Checkout pygraphviz
      uses: actions/checkout@v2

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install graphviz
      run: brew install graphviz

    - name: Create venv
      run: |
        python3 -m venv ~/venv
        source ~/venv/bin/activate

    - name: Install packages
      run: |
        pip install --upgrade pip wheel setuptools
        pip install -r requirements/doc.txt
        pip install -r requirements/test.txt
        pip install .
        pip list

    - name: Test pygraphviz
      run: pytest --pyargs pygraphviz


  macports:

    runs-on: macOS-latest

    strategy:
      matrix:
        python-version: [3.7, 3.8, 3.9]

    steps:

    - name: Checkout pygraphviz
      uses: actions/checkout@v2

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Download macports pkg
      run: wget https://distfiles.macports.org/MacPorts/MacPorts-2.6.4-10.15-Catalina.pkg

    - name: Install macports
      run: sudo installer -pkg MacPorts-2.6.4-10.15-Catalina.pkg -target /

    - name: Update PATH
      run: export PATH=/opt/local/bin:/opt/local/sbin:$PATH

    - name: Install graphviz
      run: sudo /opt/local/bin/port install graphviz-devel

    - name: Create venv
      run: |
        python3 -m venv ~/venv
        source ~/venv/bin/activate

    - name: Install packages
      run: |
        pip install --upgrade pip wheel setuptools
        pip install -r requirements/doc.txt
        pip install -r requirements/test.txt
        pip install --global-option=build_ext --global-option="-I/opt/local/include/" --global-option="-L/opt/local/lib/" .
        pip list

    - name: Test pygraphviz
      run: |
        export PATH=/opt/local/bin:/opt/local/sbin:$PATH
        pytest --pyargs pygraphviz


#  windows:
#
#    runs-on: windows-latest
#
#    strategy:
#      matrix:
#        python-version: [3.7]
#
#    steps:
#
#    - name: Checkout pygraphviz
#      uses: actions/checkout@v2
#
#    - name: Set up Python ${{ matrix.python-version }}
#      uses: actions/setup-python@v2
#      with:
#        python-version: ${{ matrix.python-version }}
#
#    - name: Download graphviz source
#      run: Invoke-WebRequest -Uri "https://www2.graphviz.org/Packages/stable/windows/10/cmake/Release/x64/graphviz-install-2.44.1-win64.exe" -OutFile "C:\Temp\graphviz-install-2.44.1-win64.exe"
#
#    - name: Install exe
#      run: Start-Process -Wait -FilePath "C:\Temp\graphviz-install-2.44.1-win64.exe" -ArgumentList '/S' -PassThru
#
#    - name: Install packages
#      run: |
#        $PATH = [Environment]::GetEnvironmentVariable("PATH")
#        $graphviz_path = "C:\Program Files\Graphviz 2.44.1\bin"
#        [Environment]::SetEnvironmentVariable("PATH", "$graphviz_path;$PATH")
#        dot -c
#        dot -v
#        pip install --upgrade pip wheel setuptools --user
#        pip install -r requirements/doc.txt --user
#        pip install -r requirements/test.txt --user
#        python setup.py build_ext --include-dirs="C:\Program Files\Graphviz 2.44.1\include" --library-dirs="C:\Program Files\Graphviz 2.44.1\lib"
#        python setup.py install --user
#        pip list
#
#    - name: Test pygraphviz
#      run: |
#        $PATH = [Environment]::GetEnvironmentVariable("PATH")
#        $graphviz_path = "C:\Program Files\Graphviz 2.44.1\bin"
#        [Environment]::SetEnvironmentVariable("PATH", "$graphviz_path;$PATH")
#        [Environment]::SetEnvironmentVariable("PY_IGNORE_IMPORTMISMATCH", 1)
#        pytest --pyargs pygraphviz
